// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id           String         @id @default(uuid())
  email        String         @unique
  name         String
  password     String
  role         Role           @default(STUDENT)
  Student      Student[]
  Professor    Professor[]
  RefreshToken RefreshToken[]
}

model Student {
  id        String  @id @default(uuid())
  birthDate String
  ra        String  @unique
  userId    String  @unique
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  class     Class[]
}

model Professor {
  id              String @id @default(uuid())
  professorNumber Int    @unique
  user            User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId          String @unique
  Post            Post[]
}

model Post {
  id        String    @id @default(uuid())
  title     String
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  published Boolean   @default(false)
  author    Professor @relation(fields: [authorId], references: [id])
  authorId  String
  classId   String
  class     Class     @relation(fields: [classId], references: [id])

  @@index([authorId])
  @@index([classId])
}

model Class {
  id      String    @id @default(uuid())
  name    String
  student Student[]
  posts   Post[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  expiresIn Int
  createdAt DateTime @default(now())

  @@index([userId])
}

enum Role {
  STUDENT
  PROFESSOR
}
